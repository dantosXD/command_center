name: CI

on:
  push:
  pull_request:

env:
  NODE_VERSION: '22'

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint and Format
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Deno fmt check (backend functions)
        run: deno fmt --check backend/supabase/functions
      - name: Deno lint (backend functions)
        run: deno lint backend/supabase/functions
      - name: ESLint (frontend)
        run: pnpm --filter frontend lint

  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Type check (frontend)
        run: pnpm --filter frontend check
      - name: Unit tests (frontend)
        run: pnpm --filter frontend test --run

  contract-and-rls-tests:
    runs-on: ubuntu-latest
    name: Contract and RLS Tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: command_center
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/command_center
        run: |
          psql $DATABASE_URL < backend/supabase/migrations/0001_init.sql
          psql $DATABASE_URL < backend/supabase/migrations/0002_core_entities.sql
          psql $DATABASE_URL < backend/supabase/migrations/0003_storage.sql
          psql $DATABASE_URL < backend/supabase/migrations/0004_pg_cron.sql
          psql $DATABASE_URL < backend/supabase/migrations/0005_flags.sql
          psql $DATABASE_URL < backend/supabase/migrations/0006_search.sql
          psql $DATABASE_URL < backend/supabase/migrations/0010_hub_view.sql
          psql $DATABASE_URL < backend/supabase/migrations/0011_hub_search.sql
          psql $DATABASE_URL < backend/supabase/migrations/0012_domain_permissions.sql
          psql $DATABASE_URL < backend/supabase/migrations/0013_audit_log.sql
      - name: Contract tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/command_center
        run: pnpm test:contract
      - name: RLS tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/command_center
        run: pnpm test:rls

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright browsers
        run: pnpm --filter frontend exec playwright install --with-deps
      - name: E2E tests (frontend)
        run: pnpm --filter frontend test:e2e

  accessibility-tests:
    runs-on: ubuntu-latest
    name: Accessibility Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Accessibility tests
        run: pnpm test:accessibility
